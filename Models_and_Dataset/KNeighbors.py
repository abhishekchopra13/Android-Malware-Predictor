# -*- coding: utf-8 -*-

import numpy as np
import pandas as pd
from sklearn import preprocessing
from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import train_test_split
import requests
import io

# importing dataset

df = pd.read_csv('/dataset.csv')
df.info()

# preprocessing dataframe to feed classifier without errors

df['class'].value_counts()

df = df.replace(  to_replace = '?' , value = '0')

df = df.astype(int)

# reading permissions we don't require to train/test on

td = pd.read_csv('/remove_perm.txt', sep=" ", header=None)
print(td)

tdl = td[0].values.tolist()
print(tdl)

# dropping unwanted columns

df = df.drop(columns=tdl)
df.info()

# sorting and saving final dataframe into a CSV for future verifications

df = df.sort_index(axis = 1) 
df.info()

dft.to_csv('sorted.csv',index = False)

np.savetxt('/sorted_permlist.txt',np.array(dft.columns),fmt='%s')

# splitting dataframe for training and testing

X = np.array(df.drop(columns=["class"]))
Y = np.array(df["class"])

X_train, X_test, Y_train, Y_test = train_test_split(X,Y,test_size=0.3)

# training on 70% data

clf = KNeighborsClassifier(n_neighbors=3)
clf.fit(X_train, Y_train) 

# checking accuracy and metrics

accuracy = clf.score(X_test, Y_test)
print(accuracy)

from sklearn.metrics import plot_confusion_matrix

disp = plot_confusion_matrix(clf, X_test, Y_test)
print(disp.confusion_matrix)

# exporting trained model for future use

filename = '/KNeighbors_model.sav'
import joblib
joblib.dump(clf,filename)
