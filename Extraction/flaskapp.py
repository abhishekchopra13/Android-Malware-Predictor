from flask import Flask, render_template, request, redirect, flash, url_for
import xml.etree.ElementTree as ET
import pandas as pd
import os
import joblib
import sys

def remove(string): 
    return "".join(string.split()) 

def detect(filename):
    isExist = os.path.exists(filename)
    if not isExist:
        return "File not found!"  
    if not filename.endswith('.apk'):
        return "Enter valid apk file!"
    #Default Permissions
    print("Reading Default Permissions\n")
    f = open("permlist.txt","r")
    DefaultPerm = f.readlines()
    print("Default permissions read\n")
    #The following list l has permissions used by the app
    l = list(DefaultPerm)
    # This extracts permissions in xml file
    print("Extracting features from ",filename," file\n")
    os.system("androguard axml -o test.xml " + filename)
    root = ET.parse("test.xml").getroot()
    #Extracting Action and Permissions from the apk file
    user_permission = root.findall("./uses-permission")
    user_action = root.findall('./application/receiver/intent-filter/action')
    permissions = user_permission + user_action

    # # Initialising the dictionary hashmap
    prefix1 = "android.permission."
    hash_map = {}
    for x in set(l):
        hash_map[x] = 0
    for perm in permissions:
        for att in perm.attrib:
            to_str = str(perm.attrib[att])
            for it in l:
                if remove(it) == remove(to_str) or remove(prefix1+it) == remove(to_str):
                    hash_map[it] = 1
            # print("{}\n".format(perm.attrib[att])) #Marking the permission found to be 1
    df = pd.DataFrame([hash_map])
    df = df.sort_index(axis = 1)
    df.to_csv('Permcsvfile.csv', index=False, header = True)
    print("Features Extracted data has been saved to Permcsvfile.csv\n")
    filename = 'trained_model.sav'
    loaded_model = joblib.load(filename)
    new = df
    isMalware = loaded_model.predict(new)
    print('\n\n*****Ignore version warnings if any*****\n\n',filename,'file is : ')
    if(isMalware == 1):
        return "Malware"
    else:
        return "Benign"

UPLOAD_FOLDER = './upload_folder'

app = Flask(__name__)
app.secret_key = "secret key"
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER

@app.route('/')
def home():
    return render_template('index.html')


@app.route('/', methods=['POST'])
def submit_file():
    if request.method == 'POST':
        if 'file' not in request.files:
            flash('No file part')
            return redirect(request.url)
        file = request.files['file']
        if file.filename == '':
            flash('No file selected for uploading')
            return redirect(request.url)
        if file:
            filename = file.filename
            if not filename.endswith('.apk'):
                flash("Enter valid apk file!")
                flash(filename)
                return redirect('/')
            file.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))
            data = detect(os.path.join(app.config['UPLOAD_FOLDER'], filename))
            flash(data)
            flash(filename)
            return redirect('/')


if __name__ == '__main__':
   app.run()